/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.hotel.layered.view;

import edu.hotel.layered.controller.RoomCategoryController;
import edu.hotel.layered.controller.RoomController;
import edu.hotel.layered.dto.RoomCategoryDto;
import edu.hotel.layered.dto.RoomDto;
import edu.hotel.layered.entity.RoomCategoryEntity;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yasas Randeeka
 */
public class RoomsView extends javax.swing.JFrame {
    RoomController roomController;
    List<String> roomCategories=new ArrayList<>();
    List<RoomDto> roomDtos=new ArrayList<>();
    List<RoomCategoryDto> categories=new ArrayList<>();
    /**
     * Creates new form ManageRooms
     */
    public RoomsView() {
        this.roomController=new RoomController();
        initComponents();
        loadRoomCategories();
        loadRooms();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblManageRooms = new javax.swing.JLabel();
        lblRoomId = new javax.swing.JLabel();
        txtRoomId = new javax.swing.JTextField();
        lblOccupancy = new javax.swing.JLabel();
        cmbobxCategory = new javax.swing.JComboBox<>();
        btnAddRoom = new javax.swing.JButton();
        btnSearchRoom = new javax.swing.JButton();
        btnUpdateRoom = new javax.swing.JButton();
        lblAvailable = new javax.swing.JLabel();
        cmbobxAvailable = new javax.swing.JComboBox<>();
        btnToHome = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblRoom = new javax.swing.JTable();
        btnDeleteRoom = new javax.swing.JButton();
        btnClearRoom = new javax.swing.JButton();
        lblDescription = new javax.swing.JLabel();
        txtRoomDescription = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblManageRooms.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        lblManageRooms.setText("Mange Rooms");

        lblRoomId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRoomId.setText("Room ID");

        lblOccupancy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOccupancy.setText("Category");

        cmbobxCategory.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbobxCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", " " }));
        cmbobxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbobxCategoryActionPerformed(evt);
            }
        });

        btnAddRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAddRoom.setText("Add");
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });

        btnSearchRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearchRoom.setText("Search");
        btnSearchRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchRoomActionPerformed(evt);
            }
        });

        btnUpdateRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnUpdateRoom.setText("Update");
        btnUpdateRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateRoomActionPerformed(evt);
            }
        });

        lblAvailable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAvailable.setText("Available");

        cmbobxAvailable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbobxAvailable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No", "N/A" }));

        btnToHome.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnToHome.setText("Home");
        btnToHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnToHomeActionPerformed(evt);
            }
        });

        tblRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRoomMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblRoom);

        btnDeleteRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDeleteRoom.setText("Delete");
        btnDeleteRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteRoomActionPerformed(evt);
            }
        });

        btnClearRoom.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnClearRoom.setText("Clear");
        btnClearRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearRoomActionPerformed(evt);
            }
        });

        lblDescription.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDescription.setText("Description");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addComponent(lblManageRooms)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnToHome)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOccupancy, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRoomDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbobxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbobxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnAddRoom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSearchRoom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdateRoom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDeleteRoom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClearRoom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManageRooms)
                    .addComponent(btnToHome))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRoomId)
                    .addComponent(txtRoomId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddRoom))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnSearchRoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateRoom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteRoom))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDescription)
                            .addComponent(txtRoomDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOccupancy)
                            .addComponent(cmbobxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClearRoom)
                    .addComponent(lblAvailable)
                    .addComponent(cmbobxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed
        // TODO add your handling code here:
        saveRoom();
    }//GEN-LAST:event_btnAddRoomActionPerformed

    private void btnSearchRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchRoomActionPerformed
        searchRoom();
    }//GEN-LAST:event_btnSearchRoomActionPerformed

    private void btnUpdateRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateRoomActionPerformed
        updateRoom();
    }//GEN-LAST:event_btnUpdateRoomActionPerformed

    private void btnToHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnToHomeActionPerformed
        // TODO add your handling code here:
        new HomeView().close(this);
        new HomeView().setVisible(true);
    }//GEN-LAST:event_btnToHomeActionPerformed

    private void cmbobxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbobxCategoryActionPerformed
        // TODO add your handling code here:
        //loadRoomCategories();
    }//GEN-LAST:event_cmbobxCategoryActionPerformed

    private void btnDeleteRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteRoomActionPerformed
        // TODO add your handling code here:
        deleteRoom();
    }//GEN-LAST:event_btnDeleteRoomActionPerformed

    private void btnClearRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearRoomActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnClearRoomActionPerformed

    private void tblRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRoomMouseClicked
        // TODO add your handling code here:
        displayRoom();
    }//GEN-LAST:event_tblRoomMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RoomsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RoomsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RoomsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RoomsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RoomsView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnClearRoom;
    private javax.swing.JButton btnDeleteRoom;
    private javax.swing.JButton btnSearchRoom;
    private javax.swing.JButton btnToHome;
    private javax.swing.JButton btnUpdateRoom;
    private javax.swing.JComboBox<String> cmbobxAvailable;
    private javax.swing.JComboBox<String> cmbobxCategory;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAvailable;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblManageRooms;
    private javax.swing.JLabel lblOccupancy;
    private javax.swing.JLabel lblRoomId;
    private javax.swing.JTable tblRoom;
    private javax.swing.JTextField txtRoomDescription;
    private javax.swing.JTextField txtRoomId;
    // End of variables declaration//GEN-END:variables

    private void loadRoomCategories() {
        categories=roomController.getAllRoomCategories();
        
        String[] arr=new String[categories.size()];
        for(int i=0;i<categories.size();i++) {
           //roomCategories.add(categories.get(i).getOccupancy()+","+categories.get(i).getBedSize());
           arr[i]=categories.get(i).getOccupancy()+","+categories.get(i).getBedSize();
        }
        cmbobxCategory.setModel(new DefaultComboBoxModel<>(arr));
        
        /*2nd method to convert ArrayList into String Array*/
        //cmbobxCategory.setModel(new DefaultComboBoxModel<>(roomCategories.toArray(new String[0])));
    }
    private void loadRooms(){
        try {
            String columns[] = {"Id", "Description", "Category", "Available"};
            DefaultTableModel dtm = new DefaultTableModel(columns, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            }; 
            tblRoom.setModel(dtm);
            roomDtos = roomController.getAllrooms();

            for (RoomDto dto : roomDtos) {
                Object[] rowData = {dto.getRoomId(), dto.getDescription(),dto.getCategory(),dto.getAvaiable()};
                dtm.addRow(rowData);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Loading Error-"+e);
        }
    }

    private void saveRoom() {
        int choice=JOptionPane.showConfirmDialog(rootPane, "Are you sure?", "Save Room",
                JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);
        try {
            if(choice==JOptionPane.YES_OPTION){
                String category=String.valueOf(cmbobxCategory.getSelectedItem());
                String available=String.valueOf(cmbobxAvailable.getSelectedItem());
                RoomDto roomDto=new RoomDto(0,txtRoomDescription.getText(),category,available);
                String result=roomController.saveRoom(roomDto);
                if(result.equals("succeed")){
                   JOptionPane.showMessageDialog(null, " Saved Room Successfully");
                   clear();
                   loadRooms();
                }
                else{
                    JOptionPane.showMessageDialog(null, "Save Room Failed");
                }
            }
        } catch (Exception ex){
            Logger.getLogger(CustomerView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error Input Details");
        }
    }

    private void clear() {
        txtRoomId.setText("");
        txtRoomDescription.setText("");
        cmbobxCategory.setSelectedItem(categories.get(0).getOccupancy()+","+categories.get(0).getBedSize());
        cmbobxAvailable.setSelectedItem("Yes");
    }
    
    private void displayRoom(){
         if(!txtRoomId.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "First Clear Loaded Room Details!");
            return;
        }
        int selectedRow=tblRoom.getSelectedRow();
        //{"Id", "Description", "Category", "Available"};
        if(selectedRow!=-1){
            DefaultTableModel model=(DefaultTableModel)tblRoom.getModel();
            
            txtRoomId.setText(String.valueOf(model.getValueAt(selectedRow, 0)));
            txtRoomDescription.setText(String.valueOf(model.getValueAt(selectedRow, 1)));
            cmbobxCategory.setSelectedItem(String.valueOf(model.getValueAt(selectedRow, 2)));
            cmbobxAvailable.setSelectedItem(String.valueOf(model.getValueAt(selectedRow, 3)));
        }
    }

    private void updateRoom() {
        RoomDto dto=new RoomDto();
        
        try {
            dto.setRoomId(Integer.parseInt(txtRoomId.getText()));
            dto.setDescription(txtRoomDescription.getText());
            dto.setCategory(String.valueOf(cmbobxCategory.getSelectedItem()));
            dto.setAvaiable(String.valueOf(cmbobxAvailable.getSelectedItem()));
            
            String result=roomController.updateRoom(dto);
            if(result.equals("succeed")){
                JOptionPane.showMessageDialog(rootPane, "Room Updated Successfully");
                clear();
                loadRooms();
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Room Update Failed");
            }
        } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Error-Room Update");
        } 
    }

    private void deleteRoom() {
        int id=Integer.parseInt(txtRoomId.getText());
        int choice=JOptionPane.showConfirmDialog(rootPane, "Are you sure?", "Delete Room",
                JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.INFORMATION_MESSAGE);
        try {
            if(choice==JOptionPane.YES_OPTION){
                String result=roomController.deleteCustomer(id);
                System.out.println(result);
                if(result.equals("succeed")){
                   JOptionPane.showMessageDialog(null, " Deleted Room Successfully");
                   clear();
                   loadRooms();
                }
                else{
                    JOptionPane.showMessageDialog(null, result);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error-Room Delete");    
        }
    }

    private void searchRoom() {
         int id=0;
        try {
            if(!txtRoomId.getText().equals("")){
                id=Integer.parseInt(txtRoomId.getText());
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "Please Enter Room Id");
                return;
            }
            RoomDto dto=roomController.getRoom(id);
            
            txtRoomId.setText(String.valueOf(dto.getRoomId()));
            txtRoomDescription.setText(dto.getDescription());
            cmbobxCategory.setSelectedItem(dto.getCategory());
            cmbobxAvailable.setSelectedItem(dto.getAvaiable());
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Not Found Details!!");
            clear();
        }
    }
}
